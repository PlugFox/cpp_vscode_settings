name: CHECKOUT

on:
  workflow_dispatch:
#  push:
#    branches:
#      - "master"
#      - "develop"
#      - "feature/**"
#      - "bugfix/**"
#      - "hotfix/**"
#      - "support/**"
#    paths:
#      - "bin/**.cpp"
#      - "lib/**.cpp"
#      - "test/**.cpp"
#  pull_request:
#    branches:
#      - "master"
#      - "develop"
#      - "feature/**"
#      - "bugfix/**"
#      - "hotfix/**"
#      - "support/**"
#    paths:
#      - "bin/**.cpp"
#      - "lib/**.cpp"
#      - "test/**.cpp"

jobs:
  lint:
    name: C++ Lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - ubuntu-22.04
          - macos-12
        compiler:
          - gcc
          #- llvm
          # you can specify the version after `-` like `llvm-13.0.0`.
        #include:
        #  - os: "windows-2022"
        #    compiler: "msvc"

    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/vcpkg
            ./build/vcpkg_installed
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.BUILD_TYPE }}-

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          vcpkg: true
          cppcheck: true
          clangtidy: true

      - name: Run Clang-Tidy
        run: |
          clang-tidy bin/main.cpp -- -std=c++20

