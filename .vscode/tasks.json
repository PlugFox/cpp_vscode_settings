{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "create build directory",
      "type": "shell",
      "windows": {
        "command": "New-Item -ItemType Directory -Path ${workspaceFolder}\\bin, ${workspaceFolder}\\bin -Force -ErrorAction SilentlyContinue -OutVariable output | Out-Null"
      },
      "linux": {
        "command": "mkdir -p ${workspaceFolder}/bin ${workspaceFolder}/bin > /dev/null 2>&1"
      },
      "osx": {
        "command": "mkdir -p ${workspaceFolder}/bin ${workspaceFolder}/bin > /dev/null 2>&1"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      }
    },
    {
      "type": "shell",
      "label": "clang++ build (development)",
      "windows": {
        "command": "clang++.exe",
        "args": [
          "-fcolor-diagnostics",
          "-fansi-escape-codes",
          "-g",
          "-std=c++20",
          "${file}",
          "-o",
          "${workspaceFolder}\\bin\\${fileBasenameNoExtension}.exe"
        ]
      },
      "linux": {
        "command": "clang++",
        "args": [
          "-fcolor-diagnostics",
          "-fansi-escape-codes",
          "-g",
          "-std=c++20",
          "${file}", //"${workspaceFolder}/*.cpp",
          "-o",
          "${workspaceFolder}/bin/${fileBasenameNoExtension}"
        ]
      },
      "osx": {
        "command": "clang++",
        "args": [
          "-fcolor-diagnostics",
          "-fansi-escape-codes",
          "-g",
          "-std=c++20",
          "${file}", //"${workspaceFolder}/*.cpp",
          "-o",
          "${workspaceFolder}/bin/${fileBasenameNoExtension}"
        ]
      },
      "dependsOn": ["create build directory"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$gcc"],
      "runOptions": {
        "runOn": "default"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "detail": "compiler: clang++"
    },
    {
      "type": "shell",
      "label": "clang++ build (production)",
      "windows": {
        "command": "clang++.exe",
        "args": [
          "-fcolor-diagnostics",
          "-fansi-escape-codes",
          "-g",
          "-std=c++20", // Sets the C++ language standard to C++20.
          "-O3", // Enables maximum optimization level, which can improve runtime performance but may increase build time.
          "-Wall",
          "-Wextra",
          "-pedantic",
          "-Werror", // Enables all warnings and treats them as errors
          //"-march=native", // Generates code optimized for the native architecture, which can improve performance on the current machine.
          //"-fPIC", // Generates position-independent code, which is necessary for shared library builds.
          //"-shared", // Generates a shared library instead of an executable.
          "${file}", //"${workspaceFolder}\\*.cpp",
          "-o",
          "${workspaceFolder}\\bin\\${fileBasenameNoExtension}.exe"
        ]
      },
      "linux": {
        "command": "clang++",
        "args": [
          "-fcolor-diagnostics",
          "-fansi-escape-codes",
          "-g",
          "-std=c++20", // Sets the C++ language standard to C++20.
          "-O3", // Enables maximum optimization level, which can improve runtime performance but may increase build time.
          "-Wall",
          "-Wextra",
          "-pedantic",
          "-Werror", // Enables all warnings and treats them as errors
          //"-march=native", // Generates code optimized for the native architecture, which can improve performance on the current machine.
          //"-fPIC", // Generates position-independent code, which is necessary for shared library builds.
          //"-shared", // Generates a shared library instead of an executable.
          "${file}", //"${workspaceFolder}/*.cpp",
          "-o",
          "${workspaceFolder}/bin/${fileBasenameNoExtension}"
        ]
      },
      "osx": {
        "command": "clang++",
        "args": [
          "-fcolor-diagnostics",
          "-fansi-escape-codes",
          "-g",
          "-std=c++20", // Sets the C++ language standard to C++20.
          "-O3", // Enables maximum optimization level, which can improve runtime performance but may increase build time.
          "-Wall",
          "-Wextra",
          "-pedantic",
          "-Werror", // Enables all warnings and treats them as errors
          //"-march=native", // Generates code optimized for the native architecture, which can improve performance on the current machine.
          //"-fPIC", // Generates position-independent code, which is necessary for shared library builds.
          //"-shared", // Generates a shared library instead of an executable.
          "${file}", //"${workspaceFolder}/*.cpp",
          "-o",
          "${workspaceFolder}/bin/${fileBasenameNoExtension}"
        ]
      },
      "dependsOn": ["create build directory"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$gcc"],
      "runOptions": {
        "runOn": "default"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "detail": "compiler: clang++"
    },
    {
      "type": "shell",
      "label": "gcc build (development)",
      "command": "g++.exe",
      "windows": {
        "command": "g++.exe",
        "args": [
          "-fdiagnostics-color=always",
          "-g",
          "-std=c++20",
          "${file}", //"${workspaceFolder}\\*.cpp",
          "-o",
          "${workspaceFolder}\\bin\\${fileBasenameNoExtension}.exe"
        ]
      },
      "linux": {
        "command": "g++",
        "args": [
          "-fdiagnostics-color=always",
          "-g",
          "-std=c++20",
          "${file}", //"${workspaceFolder}/*.cpp",
          "-o",
          "${workspaceFolder}/bin/${fileBasenameNoExtension}"
        ]
      },
      "osx": {
        "command": "g++",
        "args": [
          "-fdiagnostics-color=always",
          "-g",
          "-std=c++20",
          "${file}", //"${workspaceFolder}/*.cpp",
          "-o",
          "${workspaceFolder}/bin/${fileBasenameNoExtension}"
        ]
      },
      "dependsOn": ["create build directory"],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": ["$gcc"],
      "runOptions": {
        "runOn": "default"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "detail": "compiler: g++"
    }
  ]
}
